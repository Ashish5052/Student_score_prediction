# -*- coding: utf-8 -*-
"""Student_score_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1esUzpUFhwQ-acyFNHlNHLg_7EVQNu9av
"""

import pandas as pd

data=pd.read_csv("/content/score.csv")
data.head(10)

data.isnull().sum()

data.shape

import matplotlib.pyplot as plt

# DATA VISUALISATION
# CORRELATION CHART OF STUDENT STUDY HOURS AGAINST THREIR SCRORES
plt.scatter(data['Hours'],data['Scores'],color="red")
plt.xlabel('study_hours')
plt.ylabel('Scores')
plt.title('CORRELATION CHART OF STUDENT STUDY HOURS AGAINST THREIR SCRORES')
plt.show()

data.describe()

#splitting the dataset
x=data[["Hours"]].values
y=data[["Scores"]].values

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)

print(" we split the data into two parts in the ratio of 80:20")
x_train.shape

x_test.shape

#training the model using linear regression algorithm
from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)
print("Trained successfully")

#Plotting a linear regression line
plt.scatter(x_train,y_train,color="red")
plt.plot(x_train,model.predict(x_train),color="blue")
plt.xlabel("Hours")
plt.ylabel("Scores")
plt.title("Linear Regression Line")
plt.show()

#Predict Score Vs Actual Score
test_data=pd.DataFrame({"Actual Score":y_test.flatten(),"Predicted Score":model.predict(x_test).flatten()})
test_data

# Now checking our model on input data
import math
hours=4
print(" The score will be", math.floor(model.predict([[hours]])))

#model performance: a. Accuracy score b. Mean Absolute Error
Accu_p=model.score(x_test,y_test)
print("Accuracy score",Accu_p)



